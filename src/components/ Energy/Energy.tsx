import "./Energy.css"
import {gameState} from "../../state/GameState.ts";
import {observer} from "mobx-react-lite";
import {FC} from "react";

setInterval(() => {
    if (gameState.energy >= gameState.total_energy) {
        return
    }
    gameState.setEnergy(gameState.energy + +gameState.speed_energy.toFixed(2))
}, 1000)

function isInt(value: number) {
    return !isNaN(value) &&
        parseInt(String(Number(value))) == value &&
        !isNaN(parseInt(String(value), 10));
}

const Energy:FC = observer(() => {
    return (
        <div className="energy">
            <div className="energy__label">
                <svg className="energy__icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 34.9 51.65">
                    <path fill="#eaaf0a"
                          d="M20.35,1.5s-4.94,6.11-6.22,8.19-4.95,6.72-6.46,8.88-5.21,7.85-5.21,7.85c0,0-2.63.53,1.22.49s9,.55,9.9.33,2.41-.9,2.25.1-1.64,10.96-1.64,10.96l.94,6.6,8.06-11.94,9.08-11.78s-3.06-.04-7.46-.26-5.28-1.32-5.28-1.32l.28-15.29.55-2.81Z"/>
                    <path fill="#000"
                          d="M20.41.53c-1.02.37-1.95,1.04-2.75,1.77-1.85,1.69-2.77,4-3.97,6.14-1.3,2.3-2.73,4.53-4.44,6.54s-3.32,4.28-4.82,6.54c-1.18,1.77-2.35,3.54-3.42,5.38-.35.6.08,1.59.86,1.5,1.48-.16,2.96-.31,4.45-.43,2.1-.18,4.27-.43,6.38-.26.03,0,.07,0,.1.01-.25-.03-.03,0,.09.02.25.04.5.08.74.13.41.07.81.15,1.21.25.32.07.64.15.95.25l-.7-1.23c-.37,2.6-.74,5.21-1.09,7.82s-.76,5.25-.76,7.92v4.99c0,.98,1.37,1.37,1.86.5,2.18-3.85,4.38-7.69,6.68-11.47,2.47-4.06,5.47-7.78,8.27-11.62.15-.21-.08.1-.07.09.1-.07.18-.21.26-.3l1.18-1.37c.67-.78,1.34-1.57,2.02-2.35.55-.64.21-1.71-.71-1.71-1.93,0-3.86.01-5.79.05-1.07.02-2.14.06-3.22.12-.86.05-1.7-.09-2.52-.32-.32-.09-.63-.18-.94-.29-.12-.04-.72-.29-.23-.08l.5.86c0-4.58-.02-9.2.52-13.76.18-1.49.37-2.97.6-4.45.08-.53-.13-1.07-.7-1.23-.47-.13-1.15.16-1.23.7-.42,2.8-.84,5.62-.99,8.45s-.17,5.46-.19,8.19c0,.7,0,1.41,0,2.11,0,.32.18.73.5.86,1.27.54,2.64.91,4.02.97,1.19.06,2.42-.1,3.62-.12,2.02-.04,4.05-.06,6.07-.06l-.71-1.71c-1.15,1.35-2.34,2.67-3.46,4.04-1.3,1.6-2.48,3.33-3.7,4.99-1.48,2.01-2.99,4.01-4.3,6.13-1.46,2.35-2.84,4.74-4.22,7.14-.99,1.71-1.97,3.42-2.94,5.14l1.86.5v-4.22c0-1.1-.05-2.2.06-3.29.35-3.25.83-6.39,1.29-9.64.14-1.01.28-2.03.43-3.04.08-.56-.13-1.04-.7-1.23-4.08-1.34-8.56-.63-12.73-.22-.58.06-1.15.12-1.73.18l.86,1.5c.84-1.44,1.75-2.86,2.67-4.25,1.43-2.16,2.84-4.34,4.49-6.34s3.19-3.96,4.53-6.15c.74-1.2,1.42-2.44,2.07-3.69.52-1.01,1.02-2.03,1.76-2.9.57-.66,1.21-1.25,1.95-1.71.22-.14.45-.26.69-.38.3-.15-.18.06.06-.03,1.2-.43.68-2.37-.53-1.93Z"/>
                </svg>
                <div className="energy__value">
                    {isInt(+gameState.energy.toFixed(2)) ? +gameState.energy.toFixed(2) : Math.floor(+gameState.energy.toFixed(2))} / {gameState.total_energy}
                </div>
            </div>
            <div className="energy__progress">
                <progress value={gameState.energy} max={gameState.total_energy}/>
            </div>
        </div>
    )
})

export default Energy;